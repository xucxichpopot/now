{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "DORG API for Catcher V2",
    "description" : "DORG API for Catcher V2",
    "version" : "1.0.6"
  },
  "servers" : [ {
    "url" : "http://localhost/catcherv2"
  } ],
  "security" : [ {
    "ApiKey" : [ ],
    "Signature" : [ ],
    "Nonce" : [ ]
  } ],
  "paths" : {
    "/api/v1/companies/email-domain/{emailDomain}" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Search company information by domain\n\n**Original service:**\ncatcherEmailService.retrieveCompanyByEmailDomain(senderDomain)\n\n  FROM company WHERE email_domain = #{emailDomain} AND state = 4",
        "operationId" : "findCompanyByEmailDomain",
        "parameters" : [ {
          "name" : "emailDomain",
          "in" : "path",
          "description" : "The domain of a company",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Company found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "204" : {
            "description" : "No data, company not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/accounts/valid-domain/{domain}" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Check the given domain is valid or not\n\n**Original service:** catcherEmailService.selectCountCustomerWithValidDomainsContainsDomain(senderDomain) > 0\n\nFROM dorg.customer\nCheck existence of a domain in customer.valid_domains column      ",
        "operationId" : "checkValidDomain",
        "parameters" : [ {
          "name" : "domain",
          "in" : "path",
          "description" : "The domain of sender's company",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Is from a valid domain or not",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Valid"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/users/dorg1/{id}" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Find user by dorg1 user id\n\n**Original service**:\n\nFROM dorg.user u WHERE dorg1_id = #{id,jdbcType=INTEGER}\n",
        "operationId" : "findUserByUserDorg1Id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A parsed id from plant email. Example - plant email is johnrsmith13524@dioicia.com -> the id is 13524",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "204" : {
            "description" : "No data, user not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/users/{id}" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Find user by id\n\n**Original service:** \n\nFROM dorg.user u WHERE id = #{id}                                                ",
        "operationId" : "findUserById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "204" : {
            "description" : "No data, user not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/download-jobs/plant-email/{plantEmail}" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Find Download job by plant email\n\n**Original service:** \n\nFROM dorg.download_job\n\nWHERE plant_email_sm = #{plantEmail,jdbcType=VARCHAR}\n\nOR plant_email_med = #{plantEmail,jdbcType=VARCHAR}\n\nOR plant_email_lg = #{plantEmail,jdbcType=VARCHAR}\n\nORDER by download_time desc\n\nLIMIT 1 \n           ",
        "operationId" : "findDownloadJobByPlantEmail",
        "parameters" : [ {
          "name" : "plantEmail",
          "in" : "path",
          "description" : "plant email",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Download Jobs data found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DownloadJobDetail"
                }
              }
            }
          },
          "204" : {
            "description" : "Download Jobs data not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/usage-track-actions" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Get all usage track type in table 'dorg.usage_track_type_lu' to support filtering usage track by dropdown",
        "operationId" : "getUsageTrackActions",
        "responses" : {
          "200" : {
            "description" : "all usage track actions found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UsageTrackAction"
                  }
                },
                "example" : [ {
                  "id" : 1,
                  "displayName" : "Logins"
                }, {
                  "id" : 2,
                  "displayName" : "Sessions"
                }, {
                  "id" : 3,
                  "displayName" : "Download Actions"
                } ]
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/usage-track-entity-types" : {
      "get" : {
        "tags" : [ "endpoints" ],
        "description" : "Get all entity types in table 'dorg.entity_type_lu' to support filtering usage track by dropdown",
        "operationId" : "getUsageTrackEntityType",
        "responses" : {
          "200" : {
            "description" : "all usage track entity types found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UsageTrackEntityType"
                  }
                },
                "example" : [ {
                  "id" : 1,
                  "displayName" : "Company"
                }, {
                  "id" : 2,
                  "displayName" : "Person"
                }, {
                  "id" : 3,
                  "displayName" : "Intel"
                } ]
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/usage-tracks" : {
      "post" : {
        "tags" : [ "endpoints" ],
        "description" : "Search usage tracks",
        "operationId" : "findUsageTrackBySearchCriteria",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit on the number of records to return. If the set of matched results is larger than limit, cap the returned results at size limit.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "From the set of matched results, return record numbers start through (start + limit)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "description" : "filter, sort, and user ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsageTrackSearchCriteria"
              },
              "example" : {
                "filters" : [ {
                  "fieldName" : "customer",
                  "value" : "discoverorg",
                  "valueDataType" : "string",
                  "operator" : "like"
                } ],
                "dateRangeFilters" : [ {
                  "fieldName" : "timestamp",
                  "from" : "2019-07-17T17:32:28Z",
                  "to" : "2019-07-18T17:32:28Z"
                } ],
                "sorts" : [ {
                  "fieldName" : "user",
                  "order" : "asc"
                } ],
                "userIds" : [ 1, 2, 3 ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Usage tracks data found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageTrackResponse"
                },
                "example" : {
                  "total" : 1888,
                  "data" : [ {
                    "id" : 117970686,
                    "timestamp" : "2017-07-21T17:32:28Z",
                    "customer" : {
                      "id" : 4632,
                      "name" : "DiscoverOrg"
                    },
                    "detailsJson" : "{\"loginType\": \"FORM\"}",
                    "clientIp" : "172.20.19.178",
                    "user" : {
                      "id" : 103249,
                      "username" : "andrew.fortier@discoverorg.com"
                    },
                    "usageTrackAction" : {
                      "id" : 1,
                      "displayName" : "Logins"
                    },
                    "usageTrackEntity" : {
                      "id" : "1,",
                      "displayName" : "Company"
                    }
                  }, {
                    "id" : 117970687,
                    "timestamp" : "2019-07-21T13:57:13Z",
                    "customer" : {
                      "id" : 11200,
                      "name" : "DiscoverOrgQA - All of TEDD"
                    },
                    "detailsJson" : "{\"loginType\": \"FORM\"}",
                    "clientIp" : "10.255.8.9",
                    "user" : {
                      "id" : 127605,
                      "username" : "qatestTEDDManager"
                    },
                    "usageTrackAction" : {
                      "id" : 1,
                      "displayName" : "Logins"
                    },
                    "usageTrackEntity" : {
                      "id" : "3,",
                      "displayName" : "Intel Report"
                    }
                  } ]
                }
              }
            }
          },
          "204" : {
            "description" : "Usage track data not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/usage-tracks/export" : {
      "post" : {
        "tags" : [ "endpoints" ],
        "description" : "Search usage tracks by given ids for exporting",
        "operationId" : "exportUsageTrackByIds",
        "requestBody" : {
          "description" : "usage track ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsageTrackExportRequestBody"
              },
              "example" : {
                "usageTrackIds" : [ 117970686, 117970687 ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Usage tracks data found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsageTrackResponse"
                },
                "example" : {
                  "total" : 1888,
                  "data" : [ {
                    "id" : 117970686,
                    "timestamp" : "2017-07-21T17:32:28Z",
                    "customer" : {
                      "id" : 4632,
                      "name" : "DiscoverOrg"
                    },
                    "detailsJson" : "{\"loginType\": \"FORM\"}",
                    "clientIp" : "172.20.19.178",
                    "user" : {
                      "id" : 103249,
                      "username" : "andrew.fortier@discoverorg.com"
                    },
                    "usageTrackAction" : {
                      "id" : 1,
                      "displayName" : "Logins"
                    },
                    "usageTrackEntity" : {
                      "id" : "1,",
                      "displayName" : "Company"
                    }
                  }, {
                    "id" : 117970687,
                    "timestamp" : "2019-07-21T13:57:13Z",
                    "customer" : {
                      "id" : 11200,
                      "name" : "DiscoverOrgQA - All of TEDD"
                    },
                    "detailsJson" : "{\"loginType\": \"FORM\"}",
                    "clientIp" : "10.255.8.9",
                    "user" : {
                      "id" : 127605,
                      "username" : "qatestTEDDManager"
                    },
                    "usageTrackAction" : {
                      "id" : 1,
                      "displayName" : "Logins"
                    },
                    "usageTrackEntity" : {
                      "id" : "3,",
                      "displayName" : "Intel Report"
                    }
                  } ]
                }
              }
            }
          },
          "204" : {
            "description" : "Usage track data not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/export-histories" : {
      "post" : {
        "tags" : [ "endpoints" ],
        "description" : "Search export histories",
        "operationId" : "findExportHistoriesBySearchCriteria",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit on the number of records to return. If the set of matched results is larger than limit, cap the returned results at size limit.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "From the set of matched results, return record numbers start through (start + limit)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "description" : "Search export histories",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportHistorySearchCriteria"
              },
              "example" : {
                "filters" : [ {
                  "fieldName" : "plantEmail",
                  "value" : "plantEmail@dioicia.com",
                  "valueDataType" : "string",
                  "operator" : "like"
                } ],
                "dateRangeFilters" : [ {
                  "fieldName" : "downloadTime",
                  "from" : "2019-07-17T17:32:28Z",
                  "to" : "2019-07-18T17:32:28Z"
                } ],
                "sorts" : [ {
                  "fieldName" : "downloadTime",
                  "order" : "desc"
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Usage tracks data found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportHistoryResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Usage track data not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/api/v1/export-histories/export" : {
      "post" : {
        "tags" : [ "endpoints" ],
        "description" : "Search export histories by given ids for exporting. (export history <=> download job)",
        "operationId" : "exportExportHistoriesByIds",
        "requestBody" : {
          "description" : "Search export histories",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DownloadJobExportRequestBody"
              },
              "example" : {
                "downloadJobIds" : [ 13245 ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Usage tracks data found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportHistoryResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Usage track data not found"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Company" : {
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 4632
          },
          "name" : {
            "type" : "string",
            "example" : "1800flowers"
          },
          "webDomain" : {
            "type" : "string",
            "example" : "www.1800flowers.com"
          }
        }
      },
      "Valid" : {
        "required" : [ "valid" ],
        "properties" : {
          "valid" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "User" : {
        "required" : [ "customerId", "id", "userName" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 13245
          },
          "customerId" : {
            "type" : "integer",
            "example" : 4632
          },
          "userName" : {
            "type" : "string",
            "example" : "user1@gmail.com"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Wick"
          },
          "fullName" : {
            "type" : "string",
            "example" : "John Wick"
          }
        }
      },
      "Customer" : {
        "required" : [ "activeTo", "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 4632
          },
          "name" : {
            "type" : "string",
            "example" : "arista"
          },
          "validDomains" : {
            "type" : "string",
            "example" : "aristanetworks.com arista.com"
          },
          "activeTo" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          }
        }
      },
      "UserDetail" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "type" : "object",
          "properties" : {
            "email" : {
              "type" : "string",
              "example" : "user1@gmail.com"
            },
            "status" : {
              "type" : "string",
              "example" : "active"
            },
            "activeFrom" : {
              "type" : "string",
              "example" : "2017-07-21T17:32:28Z"
            },
            "activeTo" : {
              "type" : "string",
              "example" : "2017-07-21T17:32:28Z"
            },
            "exportLimit" : {
              "type" : "integer",
              "example" : 1000
            }
          }
        } ]
      },
      "CustomerDetail" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Customer"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "example" : "active"
            },
            "activeFrom" : {
              "type" : "string",
              "example" : "2017-07-21T17:32:28Z"
            },
            "maxSeats" : {
              "type" : "integer",
              "example" : 100
            },
            "activeSeats" : {
              "type" : "integer",
              "example" : 99
            },
            "exportLimit" : {
              "type" : "integer",
              "example" : 1000
            },
            "contactName" : {
              "type" : "string",
              "example" : "Vito Labate"
            },
            "contactTitle" : {
              "type" : "string",
              "example" : "North America Marketing and Communications"
            },
            "contactPhone" : {
              "type" : "string",
              "example" : "(416) 802-1763"
            },
            "contactEmail" : {
              "type" : "string",
              "example" : "vito.labate@capgemini.com"
            },
            "contactDetails" : {
              "type" : "string",
              "example" : "3/7 - 25 Users added under the premise that a new agreement is executed within 2-3 weeks."
            }
          }
        } ]
      },
      "DownloadJob" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 13245
          },
          "downloadTime" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "donwloadIp" : {
            "type" : "string",
            "example" : "203.99.198.64"
          },
          "plantEmailSm" : {
            "type" : "string",
            "example" : "Mike.Chanikornpradit@caltora.net"
          },
          "plantEmailMed" : {
            "type" : "string",
            "example" : "Mike.Chanis@caltora.net"
          },
          "plantEmailLg" : {
            "type" : "string",
            "example" : "M.Aakerholt@caltora.net"
          },
          "numRecords" : {
            "type" : "integer",
            "example" : 555
          },
          "fieldsJson" : {
            "type" : "string",
            "example" : "[{\"id\": 2, \"displayName\": \"Employee First Name...\"}, {\"id\": 3, \"displayName\": \"Employee Last Name\"}...]"
          }
        }
      },
      "DownloadJobDetail" : {
        "properties" : {
          "downloadJob" : {
            "$ref" : "#/components/schemas/DownloadJob"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDetail"
          },
          "customer" : {
            "$ref" : "#/components/schemas/CustomerDetail"
          }
        }
      },
      "UsageTrack" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Date/Time of the activity",
            "example" : "2019-07-21T12:59:53Z"
          },
          "customer" : {
            "$ref" : "#/components/schemas/UsageTrackCustomer"
          },
          "detailsJson" : {
            "type" : "string",
            "example" : "{\"entityType\": \"Company\", \"entityIds\": [1318, 7880, 3268, 1870, 1263, 5424, 550, 11645, 30443, 3443, 10474]}"
          },
          "clientIp" : {
            "type" : "string",
            "description" : "IP address associated with the user activity",
            "example" : "10.255.8.9"
          },
          "user" : {
            "$ref" : "#/components/schemas/UsageTrackUser"
          },
          "usageTrackAction" : {
            "$ref" : "#/components/schemas/UsageTrackAction"
          },
          "usageTrackEntity" : {
            "$ref" : "#/components/schemas/UsageTrackEntityType"
          }
        }
      },
      "UsageTrackResponse" : {
        "required" : [ "totalRows" ],
        "properties" : {
          "totalRows" : {
            "type" : "integer",
            "example" : 1999
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageTrack"
            }
          }
        }
      },
      "UsageTrackFilter" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "enum" : [ "customer", "platformUser", "user", "clientIp", "usageTrackAction", "usageTrackEntity" ]
          },
          "value" : {
            "type" : "string"
          },
          "valueDataType" : {
            "type" : "string",
            "enum" : [ "string", "number" ]
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "like", "equal" ]
          }
        }
      },
      "UsageTrackDateRangeFilter" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "example" : "timestamp",
            "enum" : [ "timestamp" ]
          },
          "from" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "to" : {
            "type" : "string"
          }
        }
      },
      "UsageTrackSort" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "default" : "timestamp",
            "enum" : [ "customer", "user", "clientIp", "timestamp" ]
          },
          "order" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }
      },
      "UsageTrackSearchCriteria" : {
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageTrackFilter"
            }
          },
          "dateRangeFilters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageTrackDateRangeFilter"
            }
          },
          "sorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageTrackSort"
            }
          },
          "userIds" : {
            "type" : "array",
            "description" : "if the user ids list is empty, get all usage track based on filters and sorts above",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "ExportHistoryFilter" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "enum" : [ "plantEmail", "username", "userId", "clientIp", "accountName" ]
          },
          "value" : {
            "type" : "string"
          },
          "valueDataType" : {
            "type" : "string",
            "enum" : [ "string", "number" ]
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "like", "equal" ]
          }
        }
      },
      "ExportHistoryDateRangeFilter" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "example" : "downloadTime",
            "enum" : [ "downloadTime" ]
          },
          "from" : {
            "type" : "string",
            "example" : "2017-07-21T17:32:28Z"
          },
          "to" : {
            "type" : "string"
          }
        }
      },
      "ExportHistorySort" : {
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "default" : "downloadTime",
            "enum" : [ "userId", "downloadTime", "clientIp", "accountName" ]
          },
          "order" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }
      },
      "ExportHistorySearchCriteria" : {
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExportHistoryFilter"
            }
          },
          "dateRangeFilters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExportHistoryDateRangeFilter"
            }
          },
          "sorts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExportHistorySort"
            }
          },
          "userIds" : {
            "type" : "array",
            "description" : "if the user ids list is empty, get all usage track based on filters and sorts above",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "UsageTrackAction" : {
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 1
          },
          "displayName" : {
            "type" : "string",
            "example" : "Logins"
          }
        }
      },
      "UsageTrackEntityType" : {
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 1
          },
          "displayName" : {
            "type" : "string",
            "example" : "Company"
          }
        }
      },
      "UsageTrackCustomer" : {
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "DiscoverOrg"
          }
        }
      },
      "UsageTrackUser" : {
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 1
          },
          "username" : {
            "type" : "string",
            "example" : "andrew.fortier@discoverorg.com"
          }
        }
      },
      "UsageTrackExportRequestBody" : {
        "properties" : {
          "usageTrackIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "ExportHistoryResponse" : {
        "required" : [ "totalRows" ],
        "properties" : {
          "totalRows" : {
            "type" : "integer",
            "example" : 1999
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DownloadJobDetail"
            }
          }
        }
      },
      "DownloadJobExportRequestBody" : {
        "properties" : {
          "downloadJobIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKey" : {
        "type" : "apiKey",
        "description" : "provided key getting from configuration",
        "name" : "C-API-KEY",
        "in" : "header"
      },
      "Signature" : {
        "type" : "apiKey",
        "description" : "Signature is an HMAC-SHA256 encoded message containing nonce, customer id and API key. I implemented a method to generate this signature (securityService.hmacSha256(...))",
        "name" : "C-SIGNATURE",
        "in" : "header"
      },
      "Nonce" : {
        "type" : "apiKey",
        "description" : "Nonce is a regular integer number used for protecting us against replay attacks. Pass the current timestamp. Example: new Date().time.toString()",
        "name" : "C-NONCE",
        "in" : "header"
      }
    }
  }
}